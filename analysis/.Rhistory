<<<<<<< HEAD
getwd()
setwd("Documents/Projects/gaze-xsit/data/processed-data")
setwd("Documents/Projects/gaze-xsit/data")
setwd("processed_data")
rm(list = ls())
library(dplyr)
library(readr)
library(magrittr)
source("et_helper.R")
raw.data.path <- "data_adult/"
processed.data.path <- "../processed_data/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.txt")
for (file.name in files) {
print(file.name)
## these are the two functions that are most meaningful
d <- read.smi.idf(paste(raw.data.path,file.name,sep=""), header.rows=32)
d <- preprocess.data(d)
d$subid <- file.name
## now here's where data get bound together
all.data <- bind_rows(all.data, d)
}
## WRITE DATA OUT TO CSV FOR EASY ACCESS
write_csv(all.data, paste0(processed.data.path, "processed_adult_data.csv"))
getwd()
setwd("../")
getwd()
setwd("raw_data")
################################################################################
## PREPROCESSING SCRIPT FOR GAZE-XSIT
## read in data files and consolidate them
##
## mcf ad 7/15
################################################################################
## PRELIMINARIES
rm(list = ls())
library(dplyr)
library(readr)
library(magrittr)
source("et_helper.R")
raw.data.path <- "data_adult/"
processed.data.path <- "../processed_data/"
## LOOP TO READ IN FILES
all.data <- data.frame()
files <- dir(raw.data.path,pattern="*.txt")
for (file.name in files) {
print(file.name)
## these are the two functions that are most meaningful
d <- read.smi.idf(paste(raw.data.path,file.name,sep=""), header.rows=32)
d <- preprocess.data(d)
d$subid <- file.name
## now here's where data get bound together
all.data <- bind_rows(all.data, d)
}
## WRITE DATA OUT TO CSV FOR EASY ACCESS
write_csv(all.data, paste0(processed.data.path, "processed_adult_data.csv"))
setwd("../")
setwd("../")
getwd()
setwd("analysis")
knitr::opts_chunk$set(echo=T, warning=F, cache=T, message=F, sanitize = T)
=======
df <- read.csv("../data/3_final_merged_data/speed-acc-ss-df.csv",
check.names=F, stringsAsFactors=F)
df %<>% mutate(stimuli = ifelse(stimuli == "V1" | stimuli == "V2", "ASL", stimuli),
stimuli = factor(stimuli, levels = c("ASL", "Face", "Trio", "Bull")))
df %>%
select(Sub.Num, language_modality, age_code, stimuli) %>%
unique() %>%
group_by(language_modality, age_code, stimuli) %>%
summarise(count = n()) %>%
knitr::kable()
df %>%
filter(age_code == "child") %>%
select(Sub.Num, language_modality, age_code, stimuli, age_years) %>%
unique() %>%
ggplot(aes(age_years, fill = language_modality)) +
geom_histogram() +
scale_fill_solarized() +
facet_grid(.~language_modality) +
guides(fill = F)
ss_prop <- df %>%
group_by(Sub.Num, age_code, Months, language_modality, stimuli) %>%
filter(trial_type != "no_shift") %>%
summarise(mean_correct = mean(correct))
ms <- ss_prop %>%
filter(age_code == "child") %>%
group_by(language_modality, age_code, stimuli) %>%
multi_boot_standard(column = "mean_correct")
ggplot(aes(x = stimuli, y = mean), data = ms) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),  position = position_dodge(width = 0.9)) +
geom_hline(yintercept = 0.5, lty = "dashed") +
scale_fill_solarized() +
theme(text = element_text(size=18)) +
guides(fill = F)
m1_lm <- lm(mean_correct ~ stimuli, data = filter(ss_prop, age_code == "child"))
knitr::kable(summary(m1_lm)$coef, digits = 3)
ms_rt <- df %>%
filter(age_code == "child", RT <= 2000) %>%
group_by(age_code, language_modality, stimuli, correct) %>%
multi_boot_standard(column = "RT", na.rm = T, empirical_function = "median")
ggplot(aes(x = as.factor(correct), y = median, fill = as.factor(correct)), data = ms_rt) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.9)) +
facet_grid(stimuli~age_code) +
scale_fill_solarized() +
guides(fill = F) +
theme(text = element_text(size=18)) +
xlab("Response Type") +
ylab("Median RT") +
coord_flip()
med_all <- df %>%
filter(RT <= 2000) %>% ## Here you can play with cutoffs to see how the RT distrbutions change shape
group_by(age_code, language_modality, stimuli, correct) %>%
mutate(log_RT = log(RT)) %>%
multi_boot_standard(column = "RT", na.rm = T, empirical_function = "median")
ggplot(aes(x = RT, fill = as.factor(correct)), data = filter(df, age_code == "child", RT <= 2000)) +
geom_histogram(alpha = 0.7) +
facet_grid(stimuli~age_code) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = filter(med_all, age_code == "child")) +
labs(fill = "Correct") +
guides(color = F) +
scale_fill_solarized() +
scale_color_solarized() +
theme(text = element_text(size=18))
med_trio <- df %>%
filter(stimuli == "Trio") %>%
group_by(experiment, language_modality, stimuli, correct) %>%
multi_boot_standard(column = "RT", na.rm = T, empirical_function = "median")
ggplot(aes(x = RT, fill = as.factor(correct)),
data = filter(df, age_code == "child", stimuli == "Trio")) +
geom_density(alpha = 0.5) +
facet_grid(experiment~.) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = filter(med_trio, stimuli == "Trio")) +
labs(fill = "Correct") +
guides(color = F) +
scale_fill_solarized() +
scale_color_solarized()
ms_adults <- ss_prop %>%
filter(age_code == "adult") %>%
group_by(language_modality, stimuli) %>%
multi_boot_standard(column = "mean_correct")
ggplot(aes(x = stimuli, y = mean, fill = language_modality), data = ms_adults) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),  position = position_dodge(width = 0.9)) +
geom_hline(yintercept = 0.5, lty = "dashed") +
scale_fill_solarized()
med_adults <- df %>%
filter(RT <= 2000) %>% ## Here you can play with cutoffs to see how the RT distrbutions change shape
filter(age_code == "adult") %>%
group_by(experiment, language_modality, stimuli, correct) %>%
multi_boot_standard(column = "RT", na.rm = T, empirical_function = "median")
ggplot(aes(x = RT, fill = as.factor(correct)),
data = filter(df, age_code == "adult", RT <= 2000)) +
geom_density(alpha = 0.5) +
facet_grid(experiment~.) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = med_adults) +
labs(fill = "Correct") +
guides(color = F)
ggplot(aes(x = RT, fill = as.factor(correct)),
data = filter(df, age_code == "adult", RT <= 2000)) +
geom_histogram(alpha = 0.5) +
facet_grid(experiment~.) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = med_adults) +
labs(fill = "Correct") +
guides(color = F)
ggplot(aes(x = RT, fill = as.factor(correct)),
data = filter(df, age_code == "adult", RT <= 2000)) +
geom_density(alpha = 0.5) +
facet_grid(experiment~.) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = med_adults) +
labs(fill = "Correct") +
guides(color = F)
# get the data we care about and format for Rwiener functions
# columns need to be named "q" for RT and "resp" for response
d <- df %>%
filter(age_code == "child", trial_type != "no_shift", is.na(RT_sec) == F, RT_sec > .1) %>%
select(Sub.Num, stimuli, RT_sec, correct) %>%
mutate(resp = factor(correct),
resp = plyr::revalue(resp, c("0" = "lower", "1" = "upper")),
resp = relevel(resp, "upper")) %>%
rename(q = RT_sec)
# weiner plot showing distribution of correct and incorrect responses
# wiener_plot(select(d, q, resp))
sub.pars <- data.frame(Separation = numeric(),
Non.Decision = numeric(),
Bias = numeric(),
Drift = numeric(),
Condition = character(),
Sub.Num = character(),
stringsAsFactors = F)
#because RWiener is finicky:
d$resp <- as.character(d$resp)
conditions <- unique(as.character(d$stimuli))
subs <- unique(as.character(d$Sub.Num))
for (j in 1:length(subs)) {
sid <- as.character(subs[j])
dat <- as.data.frame(filter(d, Sub.Num == sid))
condition_type <- unique(as.character(dat$stimuli))
# fit ddm for each participant
opt <- optim(c(1, .1, .1, 1), wiener_deviance,
dat=select(dat, c(q, resp)), method="Nelder-Mead")
pars <- c(opt$par, condition_type, sid)
sub.pars[j,] <- pars
}
sub.pars$Separation <- as.numeric(sub.pars$Separation)
sub.pars$Non.Decision <- as.numeric(sub.pars$Non.Decision)
sub.pars$Bias <- as.numeric(sub.pars$Bias)
sub.pars$Drift <- as.numeric(sub.pars$Drift)
#### Why remove extreme param values?
sub.pars <- sub.pars %>%
group_by(Condition) %>%
filter(Separation < mean(Separation) + 3 * sd(Separation),
Separation > mean(Separation) - 3 * sd(Separation)) %>%
filter(Non.Decision < mean(Non.Decision) + 3 * sd(Non.Decision),
Non.Decision > mean(Non.Decision) - 3 * sd(Non.Decision)) %>%
filter(Bias < mean(Bias) + 3 * sd(Bias),
Bias > mean(Bias) - 3 * sd(Bias)) %>%
filter(Drift < mean(Drift) + 3 * sd(Drift),
Drift > mean(Drift) - 3 * sd(Drift)) %>%
ungroup() %>%
na.omit()
sub.pars %<>% gather(Param, Value, Separation:Drift)
ggplot(aes(x = Value, fill = Condition), data = filter(sub.pars, Param %in% c("Drift", "Separation"))) +
geom_density(alpha = 0.7) +
facet_grid(.~Param, scales = "free") +
scale_fill_solarized()
sub.pars.ms <- sub.pars %>%
group_by(Condition, Param) %>%
multi_boot_standard(column = "Value", empirical_function = "mean")
sub.pars.ms$Condition <- factor(sub.pars.ms$Condition, levels = c("ASL", "Face", "Trio", "Bull"))
ggplot(aes(x = Condition, y = mean, fill = Condition), data = sub.pars.ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_wrap(~Param, ncol = 4) +
scale_fill_solarized() +
guides(fill = F)
sub.pars.ms <- sub.pars %>%
group_by(Condition, Param) %>%
multi_boot_standard(column = "Value", empirical_function = "median")
sub.pars.ms$Condition <- factor(sub.pars.ms$Condition, levels = c("ASL", "Face", "Trio", "Bull"))
ggplot(aes(x = Condition, y = mean, fill = Condition), data = sub.pars.ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_wrap(~Param, ncol = 4) +
scale_fill_solarized() +
guides(fill = F)
sub.pars.ms
ggplot(aes(x = Condition, y = median, fill = Condition), data = sub.pars.ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_wrap(~Param, ncol = 4) +
scale_fill_solarized() +
guides(fill = F)
sub.pars.ms <- sub.pars %>%
group_by(Condition, Param) %>%
multi_boot_standard(column = "Value", empirical_function = "mean")
sub.pars.ms$Condition <- factor(sub.pars.ms$Condition, levels = c("ASL", "Face", "Trio", "Bull"))
ggplot(aes(x = Condition, y = mean, fill = Condition), data = sub.pars.ms) +
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_wrap(~Param, ncol = 4) +
scale_fill_solarized() +
guides(fill = F)
ggplot(aes(x = Value, fill = Condition), data = filter(sub.pars, Param %in% c("Drift", "Separation"))) +
geom_density(alpha = 0.7) +
facet_grid(.~Param, scales = "free") +
scale_fill_solarized()
ggplot(aes(x = Condition, y = mean, fill = Condition),
data = filter(sub.pars, Param %in% c("Drift", "Separation")))+
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_wrap(~Param, ncol = 4) +
scale_fill_solarized() +
guides(fill = F)
ggplot(aes(x = Condition, y = mean, fill = Condition),
data = filter(sub.pars.ms, Param %in% c("Drift", "Separation")))+
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_wrap(~Param, ncol = 4) +
scale_fill_solarized() +
guides(fill = F)
ggplot(aes(x = Condition, y = mean, fill = Condition),
data = filter(sub.pars.ms, Param %in% c("Drift", "Separation")))+
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_wrap(~Param, ncol = 4) +
scale_fill_solarized() +
guides(fill = F) +
theme(text = element_text(size = 20))
ggplot(aes(x = as.factor(correct), y = median, fill = as.factor(correct)), data = ms_rt) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.9)) +
facet_grid(stimuli~age_code) +
scale_fill_solarized() +
guides(fill = F) +
theme(text = element_text(size=18)) +
xlab("Response Type") +
ylab("Median RT") +
coord_flip()
ggplot(aes(x = stimuli, y = median),
data = filter(ms_rt, correct == 1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.9)) +
facet_grid(stimuli~age_code) +
scale_fill_solarized() +
guides(fill = F) +
theme(text = element_text(size=18)) +
xlab("Stimuli") +
ylab("Median RT")
ggplot(aes(x = stimuli, y = median),
data = filter(ms_rt, correct == 1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.9)) +
scale_fill_solarized() +
guides(fill = F) +
theme(text = element_text(size=18)) +
xlab("Stimuli") +
ylab("Median RT")
ggplot(aes(x = stimuli, y = median),
data = filter(ms_rt, correct == 1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.9)) +
scale_fill_solarized() +
guides(fill = F) +
theme(text = element_text(size=18)) +
xlab("Stimuli") +
ylab("Median RT") +
coord_flip()
ggplot(aes(x = stimuli, y = median),
data = filter(ms_rt, correct == 1)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.9)) +
scale_fill_solarized() +
guides(fill = F) +
theme(text = element_text(size=22)) +
xlab("Stimuli") +
ylab("Median RT") +
coord_flip()
med_adults <- df %>%
filter(RT <= 2000) %>% ## Here you can play with cutoffs to see how the RT distrbutions change shape
filter(age_code == "adult") %>%
group_by(experiment, language_modality, stimuli, correct) %>%
multi_boot_standard(column = "RT", na.rm = T, empirical_function = "median")
ggplot(aes(x = RT, fill = as.factor(correct)),
data = filter(df, age_code == "adult", RT <= 2000)) +
geom_density(alpha = 0.5) +
facet_grid(experiment~.) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = med_adults) +
labs(fill = "Correct") +
guides(color = F)
ggplot(aes(x = RT, fill = as.factor(correct)),
data = filter(df, age_code == "adult", RT <= 2000)) +
geom_histogram(alpha = 0.5) +
facet_grid(experiment~.) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = med_adults) +
labs(fill = "Correct") +
guides(color = F)
med_trio <- df %>%
filter(stimuli == "Trio") %>%
group_by(experiment, language_modality, stimuli, correct) %>%
multi_boot_standard(column = "RT", na.rm = T, empirical_function = "median")
ggplot(aes(x = RT, fill = as.factor(correct)),
data = filter(df, age_code == "child", stimuli == "Trio")) +
geom_density(alpha = 0.5) +
facet_grid(experiment~.) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = filter(med_trio, stimuli == "Trio")) +
labs(fill = "Correct") +
guides(color = F) +
scale_fill_solarized() +
scale_color_solarized()
med_all <- df %>%
filter(RT <= 2000) %>% ## Here you can play with cutoffs to see how the RT distrbutions change shape
group_by(age_code, language_modality, stimuli, correct) %>%
mutate(log_RT = log(RT)) %>%
multi_boot_standard(column = "RT", na.rm = T, empirical_function = "median")
ggplot(aes(x = RT, fill = as.factor(correct)), data = filter(df, age_code == "child", RT <= 2000)) +
geom_histogram(alpha = 0.7) +
facet_grid(stimuli~age_code) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = filter(med_all, age_code == "child")) +
labs(fill = "Correct") +
guides(color = F) +
scale_fill_solarized() +
scale_color_solarized() +
theme(text = element_text(size=18))
ggplot(aes(x = RT, fill = as.factor(correct)), data = filter(df, age_code == "child", RT <= 2000)) +
geom_density(alpha = 0.7) +
facet_grid(stimuli~age_code) +
geom_vline(aes(xintercept = median, color = as.factor(correct)), size = 1,
data = filter(med_all, age_code == "child")) +
labs(fill = "Correct") +
guides(color = F) +
scale_fill_solarized() +
scale_color_solarized() +
theme(text = element_text(size=18))
sub.pars.ms <- sub.pars %>%
group_by(Condition, Param) %>%
multi_boot_standard(column = "Value", empirical_function = "mean")
sub.pars.ms$Condition <- factor(sub.pars.ms$Condition, levels = c("ASL", "Face", "Trio", "Bull"))
ggplot(aes(x = Condition, y = mean, fill = Condition),
data = filter(sub.pars.ms, Param %in% c("Drift", "Separation")))+
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_wrap(~Param, ncol = 4) +
scale_fill_solarized() +
guides(fill = F) +
theme(text = element_text(size = 20))
ggplot(aes(x = Value, fill = Condition), data = filter(sub.pars, Param %in% c("Drift", "Separation"))) +
geom_density(alpha = 0.7) +
facet_grid(.~Param, scales = "free") +
scale_fill_solarized()
?multi_boot_standard
source('~/.active-rstudio-document', echo=TRUE)
sub.pars.ms <- sub.pars %>%
group_by(Condition, Param) %>%
multi_boot_standard(column = "Value", empirical_function = "mean")
sub.pars.ms$Condition <- factor(sub.pars.ms$Condition, levels = c("ASL", "Face", "Trio", "Bull"))
ggplot(aes(x = Condition, y = mean, fill = Condition),
data = sub.pars.ms)+
geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper)) +
facet_wrap(~Param, ncol = 4) +
scale_fill_solarized() +
guides(fill = F) +
theme(text = element_text(size = 20))
setwd("../../gaze-xsit/analysis/")
>>>>>>> 2de825ab603a8a1a81f91e4784b242793a5a4d54
rm(list = ls())
library(dplyr)
library(readr)
library(magrittr)
library(ggplot2)
library(tidyr)
library(knitr)
library(langcog)
library(lme4)
library(directlabels)
theme_set(theme_bw())
## output: d (mastersheet with times, trial, subject, condition, and gazes)
## input: processed data spreadsheet, subject info spreadsheet, trial info
#read in processed data
d <- read_csv("../data/processed_data/processed_adult_data.csv")
# join subject info
subinfo <- read_csv("../info/subinfo_adult_n.csv")
d %<>%
mutate(subid = gsub(".txt", "", subid)) %>%
left_join(subinfo)
# join trial info
trialinfo <- read_csv("../info/trialinfo.csv")
d %<>% left_join(trialinfo, by = "stimulus")
# filter out unusable participants
##calculate percentage of non-looks - that is, looking away from the screen entirely.
##offscreen == TRUE if x is 0 and y is 1050, so higher bad_looks are worse
d_screentime <- transform(d, offscreen = ((x == 0 & y == 1050) | is.na(x) | is.na(y))) %>%
select(subid, t, offscreen) %>%
group_by(subid) %>%
summarise(bad_looks = sum(offscreen, na.rm = TRUE), total_timeslices = n())
d_screentime <- transform(d_screentime, percent_bad_looks = bad_looks/total_timeslices)
##filter out participants more than 1 standard dev away from mean screentime
a <- sd(d_screentime$percent_bad_looks)
b <- mean(d_screentime$percent_bad_looks)
d %<>%
left_join(d_screentime)
d$keep <- ifelse(d$percent_bad_looks > (a+b), 'n', 'y')
d %<>% filter(keep == "y")
View(d_screentime)
d %>%
select(subid, condition) %>%
unique() %>%
group_by(condition) %>%
summarise(n_subs = n()) %>%
kable()
d_descrip <- d %>%
group_by(subid) %>%
select(subid, shortname, trial.type) %>%
unique() %>%
group_by(subid) %>%
summarise(n_trials = n())
d_descrip %>% kable()
d %<>% mutate(participant_looking_factor = factor(ifelse(x > 210 & x < 750 & y < 540, "left",
ifelse(x > 1170 & x < 1710 & y < 540, "right",
ifelse(x < 1230 & x > 690 & y > 540, "face", "away")))),
participant_looking_char = as.character(participant_looking_factor))
# add trial numbers
trial_num <- c(c("fam", "fam", "fam", "fam"), seq(1,16))
d %<>%
select(subid, shortname) %>%
unique() %>%
group_by(subid) %>%
cbind(trial_num) %>%
mutate(trial_num = as.character(trial_num)) %>%
left_join(., d, by = c("subid", "shortname"))
d %<>% mutate(correct = ifelse(target_object == participant_looking_char, TRUE, FALSE),
gaze_follow = ifelse(look == participant_looking_char, TRUE, FALSE))
# create exposure trial data frame
all.exp <- d %>%
filter((trial.type == "exposure" &
participant_looking_char %in% c("left", "right"))) %>%
group_by(subid, trial_num, condition, participant_looking_char, trial.type) %>%
summarise(count = n()) %>%
ungroup() %>%
complete(subid, trial_num, participant_looking_char,
fill = list(count = 0)) %>%
arrange(subid) %>%
filter(is.na(trial.type) == F) %>%
select(-condition) # here we remove condition since it has NAs after the complete function
# add condition and where gaze was directed
all.exp <- d %>%
filter(trial.type == "exposure" & participant_looking_char != "face") %>%
select(subid, condition, trial_num, look) %>%
unique() %>%
left_join(all.exp, by = c("subid", "trial_num"))
##double-check exposure trial numbers are consistent across participants
##all.exp group by participant subid & summarise n()
ss_correct_exposure <- d %>%
filter(trial.type == "exposure" & participant_looking_char %in% c("left", "right")) %>%
group_by(subid, condition, trial_num = as.numeric(trial_num)) %>%
summarise(mean_accuracy_exp = mean(correct))
ggplot(aes(x=mean_accuracy_exp, fill = condition),
data = ss_correct_exposure) +
geom_density(alpha = 0.5) +
facet_wrap(~condition) +
xlab("Mean Accuracy Scores")
ss_gf_exposure <- d %>%
filter(trial.type == "exposure", participant_looking_char %in% c("left", "right"),
condition == "gaze") %>%
group_by(subid, condition, trial_num = as.numeric(trial_num)) %>%
summarise(mean_gf_exp = mean(gaze_follow))
ggplot(aes(x=mean_gf_exp),
data = ss_gf_exposure) +
geom_density() +
xlab("Mean Gaze Following Scores") +
ggtitle("Gaze Following on each Trial in Gaze Condition")
##think about people at low end; histogram
paste("Mean Gaze Following Score is:", round(mean(ss_gf_exposure$mean_gf_exp), 2))
ggplot(aes(x=mean_gf_exp),
data = ss_gf_exposure) +
geom_histogram() +
xlab("Mean Gaze Following Scores") +
ggtitle("Gaze Following on each Trial in Gaze Condition")
paste("Mean Gaze Following Score is:", round(mean(ss_gf_exposure$mean_gf_exp), 2))
ss_acc_all <- d %>%
filter(trial.type != "familiar", participant_looking_char %in% c("left", "right")) %>%
group_by(subid, condition, trial_num = as.numeric(trial_num), trial.type) %>%
summarise(mean_accuracy = mean(correct)) %>%
spread(trial.type, mean_accuracy)
# plot the relation between acc on exposure and acc on test
ggplot(aes(x = exposure, y = test, color = condition), data = ss_acc_all) +
geom_smooth(method = "lm", se = T, size = 2) +
scale_color_solarized() +
geom_point(alpha = 0.6)
ss_acc_all$exptarget_bin <- cut(ss_acc_all$exposure, breaks = 4)
ms <- ss_acc_all %>%
group_by(subid, exptarget_bin, condition) %>%
summarise(mean_acc = mean(test, na.rm = T)) %>%
group_by(exptarget_bin, condition) %>%
multi_boot_standard(column = "mean_acc", na.rm = T) %>%
filter(is.na(exptarget_bin) == F)
ggplot(aes(x = exptarget_bin, y = mean, fill = condition), data = ms) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper), position = position_dodge(width = 0.9)) +
scale_fill_solarized()
m1.cont <- lmer(test ~ exposure * condition + (1|subid), data = ss_acc_all)
kable(summary(m1.cont)$coef)
m2.cat <- lmer(test ~ exptarget_bin * condition + (1|subid), data = ss_acc_all)
kable(summary(m2.cat)$coef)
