counted.trials = counted.trials + 1
counted.subs = counted.subs + 1
trialtotal <- trialtotal + target
}
}
trialmean <- trialtotal / counted.subs
exp.looks.to.target$targetprop[exp.looks.to.target$shortname == trial &
exp.looks.to.target$condition == "nogaze"] <-trialmean
}
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
xtabs(~aoi + shortname + subid + target_object, .) %>%
as.data.frame() %>%
filter(aoi != "face")
##plyr - drop equals false
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
select(subid, condition) %>%
unique() %>%
left_join(ss, by = "subid")
##qplot(data=filter(ss, aoi != "face"), x=aoi, y = Freq, facets = subid ~ shortname,
##      geom = "bar", stat = "identity", fill = condition)
############ DETERMINE TARGET ON EXPOSURE ################
#create table for looks to target by trial name (exposure only)
exp.looks.to.target <- ss%>%
select(shortname, condition) %>%
unique()
#nogaze: proportion of looking to the left over both objects for each trial
ns <- ss %>%
filter(condition == "nogaze")
#mark naive participants in doc
#eventually - amont of time spent looking at kept object
#correct object is one kept
#slack help channel
subs <- unique(ns$subid)
trials <- unique(ns$shortname)
nstotal <- 0
counted.trials <- 0
for (trial in trials){
trialtotal <- 0
counted.subs <- 0
for (sub in subs){
if(trial == "fengle"){
print(counted.subs)
print(sub)
print(trialtotal)
}
temp <- subset(ns, shortname == trial & subid == sub)
left.to.total <- temp[[which(temp$target_object == "left" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "left" & temp$aoi == "right"), "Freq"]]
right.to.total <- temp[[which(temp$target_object == "right" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "right" & temp$aoi == "right"), "Freq"]]
if(left.to.total + right.to.total != 0){
if(left.to.total == 0){
correct_TO = "right"
incorrect_TO = "left"
} else{
correct_TO = "left"
incorrect_TO = "right"
}
temp <- subset(temp, target_object == correct_TO)
corr <- temp[[which(temp$aoi == correct_TO), "Freq"]]
incorr <- temp[[which(temp$aoi == incorrect_TO), "Freq"]]
target <- corr / (corr+incorr)
ss$exptarget[ss$subid == sub & ss$shortname == trial &
ss$target_object == correct_TO] <- target
nstotal <- nstotal + target
counted.trials = counted.trials + 1
counted.subs = counted.subs + 1
trialtotal <- trialtotal + target
}
}
trialmean <- trialtotal / counted.subs
exp.looks.to.target$targetprop[exp.looks.to.target$shortname == trial &
exp.looks.to.target$condition == "nogaze"] <-trialmean
}
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
xtabs(~aoi + shortname + subid + target_object, .) %>%
as.data.frame() %>%
filter(aoi != "face")
##plyr - drop equals false
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
select(subid, condition) %>%
unique() %>%
left_join(ss, by = "subid")
##qplot(data=filter(ss, aoi != "face"), x=aoi, y = Freq, facets = subid ~ shortname,
##      geom = "bar", stat = "identity", fill = condition)
############ DETERMINE TARGET ON EXPOSURE ################
#create table for looks to target by trial name (exposure only)
exp.looks.to.target <- ss%>%
select(shortname, condition) %>%
unique()
#nogaze: proportion of looking to the left over both objects for each trial
ns <- ss %>%
filter(condition == "nogaze")
#mark naive participants in doc
#eventually - amont of time spent looking at kept object
#correct object is one kept
#slack help channel
subs <- unique(ns$subid)
trials <- unique(ns$shortname)
nstotal <- 0
counted.trials <- 0
for (trial in trials){
trialtotal <- 0
counted.subs <- 0
for (sub in subs){
temp <- subset(ns, shortname == trial & subid == sub)
left.to.total <- temp[[which(temp$target_object == "left" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "left" & temp$aoi == "right"), "Freq"]]
right.to.total <- temp[[which(temp$target_object == "right" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "right" & temp$aoi == "right"), "Freq"]]
if(left.to.total + right.to.total != 0){
if(left.to.total == 0){
correct_TO = "right"
incorrect_TO = "left"
} else{
correct_TO = "left"
incorrect_TO = "right"
}
temp <- subset(temp, target_object == correct_TO)
corr <- temp[[which(temp$aoi == correct_TO), "Freq"]]
incorr <- temp[[which(temp$aoi == incorrect_TO), "Freq"]]
target <- corr / (corr+incorr)
ss$exptarget[ss$subid == sub & ss$shortname == trial &
ss$target_object == correct_TO] <- target
nstotal <- nstotal + target
counted.trials = counted.trials + 1
counted.subs = counted.subs + 1
trialtotal <- trialtotal + target
}
}
trialmean <- trialtotal / counted.subs
if(trial == "fengle"){
print(trialmean)
}
exp.looks.to.target$targetprop[exp.looks.to.target$shortname == trial &
exp.looks.to.target$condition == "nogaze"] <-trialmean
}
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
xtabs(~aoi + shortname + subid + target_object, .) %>%
as.data.frame() %>%
filter(aoi != "face")
##plyr - drop equals false
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
select(subid, condition) %>%
unique() %>%
left_join(ss, by = "subid")
##qplot(data=filter(ss, aoi != "face"), x=aoi, y = Freq, facets = subid ~ shortname,
##      geom = "bar", stat = "identity", fill = condition)
############ DETERMINE TARGET ON EXPOSURE ################
#create table for looks to target by trial name (exposure only)
exp.looks.to.target <- ss%>%
select(shortname, condition) %>%
unique()
#nogaze: proportion of looking to the left over both objects for each trial
ns <- ss %>%
filter(condition == "nogaze")
#mark naive participants in doc
#eventually - amont of time spent looking at kept object
#correct object is one kept
#slack help channel
subs <- unique(ns$subid)
trials <- unique(ns$shortname)
nstotal <- 0
counted.trials <- 0
for (trial in trials){
trialtotal <- 0
counted.subs <- 0
for (sub in subs){
temp <- subset(ns, shortname == trial & subid == sub)
left.to.total <- temp[[which(temp$target_object == "left" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "left" & temp$aoi == "right"), "Freq"]]
right.to.total <- temp[[which(temp$target_object == "right" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "right" & temp$aoi == "right"), "Freq"]]
if(left.to.total + right.to.total != 0){
if(left.to.total == 0){
correct_TO = "right"
incorrect_TO = "left"
} else{
correct_TO = "left"
incorrect_TO = "right"
}
temp <- subset(temp, target_object == correct_TO)
corr <- temp[[which(temp$aoi == correct_TO), "Freq"]]
incorr <- temp[[which(temp$aoi == incorrect_TO), "Freq"]]
target <- corr / (corr+incorr)
ss$exptarget[ss$subid == sub & ss$shortname == trial &
ss$target_object == correct_TO] <- target
nstotal <- nstotal + target
counted.trials = counted.trials + 1
counted.subs = counted.subs + 1
trialtotal <- trialtotal + target
}
}
trialmean <- trialtotal / counted.subs
if(trial == "fengle"){
print(countedsubs)
print(trialtotal)
print(trialmean)
}
exp.looks.to.target$targetprop[exp.looks.to.target$shortname == trial &
exp.looks.to.target$condition == "nogaze"] <-trialmean
}
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
xtabs(~aoi + shortname + subid + target_object, .) %>%
as.data.frame() %>%
filter(aoi != "face")
##plyr - drop equals false
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
select(subid, condition) %>%
unique() %>%
left_join(ss, by = "subid")
##qplot(data=filter(ss, aoi != "face"), x=aoi, y = Freq, facets = subid ~ shortname,
##      geom = "bar", stat = "identity", fill = condition)
############ DETERMINE TARGET ON EXPOSURE ################
#create table for looks to target by trial name (exposure only)
exp.looks.to.target <- ss%>%
select(shortname, condition) %>%
unique()
#nogaze: proportion of looking to the left over both objects for each trial
ns <- ss %>%
filter(condition == "nogaze")
#mark naive participants in doc
#eventually - amont of time spent looking at kept object
#correct object is one kept
#slack help channel
subs <- unique(ns$subid)
trials <- unique(ns$shortname)
nstotal <- 0
counted.trials <- 0
for (trial in trials){
trialtotal <- 0
counted.subs <- 0
for (sub in subs){
temp <- subset(ns, shortname == trial & subid == sub)
left.to.total <- temp[[which(temp$target_object == "left" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "left" & temp$aoi == "right"), "Freq"]]
right.to.total <- temp[[which(temp$target_object == "right" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "right" & temp$aoi == "right"), "Freq"]]
if(left.to.total + right.to.total != 0){
if(left.to.total == 0){
correct_TO = "right"
incorrect_TO = "left"
} else{
correct_TO = "left"
incorrect_TO = "right"
}
temp <- subset(temp, target_object == correct_TO)
corr <- temp[[which(temp$aoi == correct_TO), "Freq"]]
incorr <- temp[[which(temp$aoi == incorrect_TO), "Freq"]]
target <- corr / (corr+incorr)
ss$exptarget[ss$subid == sub & ss$shortname == trial &
ss$target_object == correct_TO] <- target
nstotal <- nstotal + target
counted.trials = counted.trials + 1
counted.subs = counted.subs + 1
trialtotal <- trialtotal + target
}
}
trialmean <- trialtotal / counted.subs
if(trial == "fengle"){
print(counted.subs)
print(trialtotal)
print(trialmean)
}
exp.looks.to.target$targetprop[exp.looks.to.target$shortname == trial &
exp.looks.to.target$condition == "nogaze"] <-trialmean
}
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
xtabs(~aoi + shortname + subid + target_object, .) %>%
as.data.frame() %>%
filter(aoi != "face")
##plyr - drop equals false
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
select(subid, condition) %>%
unique() %>%
left_join(ss, by = "subid")
##qplot(data=filter(ss, aoi != "face"), x=aoi, y = Freq, facets = subid ~ shortname,
##      geom = "bar", stat = "identity", fill = condition)
############ DETERMINE TARGET ON EXPOSURE ################
#create table for looks to target by trial name (exposure only)
exp.looks.to.target <- ss%>%
select(shortname, condition) %>%
unique()
#nogaze: proportion of looking to the left over both objects for each trial
ns <- ss %>%
filter(condition == "nogaze")
#mark naive participants in doc
#eventually - amont of time spent looking at kept object
#correct object is one kept
#slack help channel
subs <- unique(ns$subid)
trials <- unique(ns$shortname)
nstotal <- 0
counted.trials <- 0
for (trial in trials){
trialtotal <- 0
counted.subs <- 0
for (sub in subs){
temp <- subset(ns, shortname == trial & subid == sub)
left.to.total <- temp[[which(temp$target_object == "left" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "left" & temp$aoi == "right"), "Freq"]]
right.to.total <- temp[[which(temp$target_object == "right" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "right" & temp$aoi == "right"), "Freq"]]
if(left.to.total + right.to.total != 0){
if(left.to.total == 0){
correct_TO = "right"
incorrect_TO = "left"
} else{
correct_TO = "left"
incorrect_TO = "right"
}
temp <- subset(temp, target_object == correct_TO)
corr <- temp[[which(temp$aoi == correct_TO), "Freq"]]
incorr <- temp[[which(temp$aoi == incorrect_TO), "Freq"]]
target <- corr / (corr+incorr)
ss$exptarget[ss$subid == sub & ss$shortname == trial &
ss$target_object == correct_TO] <- target
nstotal <- nstotal + target
counted.trials = counted.trials + 1
counted.subs = counted.subs + 1
trialtotal <- trialtotal + target
}
}
trialmean <- trialtotal / counted.subs
exp.looks.to.target$targetprop[exp.looks.to.target$shortname == trial &
exp.looks.to.target$condition == "nogaze"] <-trialmean
}
#proportion of looks to left object across No Gaze exposure trials
nsmean <- nstotal / counted.trials #currently .499
#gaze: proportion of looking to object of gaze for each trial
soc <- ss %>%
filter(condition == "gaze")
subs <- unique(soc$subid)
trials <- unique(soc$shortname)
soctotal <- 0
counted.trials <- 0
for (trial in trials){
trialtotal <- 0
counted.subs <- 0
for (sub in subs){
temp <- subset(soc, shortname == trial & subid == sub)
left.to.total <- temp[[which(temp$target_object == "left" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "left" & temp$aoi == "right"), "Freq"]]
right.to.total <- temp[[which(temp$target_object == "right" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "right" & temp$aoi == "right"), "Freq"]]
if(left.to.total + right.to.total != 0){
if(left.to.total == 0){
correct_TO = "right"
incorrect_TO = "left"
} else{
correct_TO = "left"
incorrect_TO = "right"
}
temp <- subset(temp, target_object == correct_TO)
corr <- temp[[which(temp$aoi == correct_TO), "Freq"]]
incorr <- temp[[which(temp$aoi == incorrect_TO), "Freq"]]
target <- corr / (corr+incorr)
ss$exptarget[ss$subid == sub & ss$shortname == trial &
ss$target_object == correct_TO] <- target
soctotal <- soctotal + target
counted.trials = counted.trials + 1
counted.subs = counted.subs + 1
trialtotal <- trialtotal + target
}
}
exp.looks.to.target$targetprop[exp.looks.to.target$shortname == trial &
exp.looks.to.target$condition == "gaze"] <-trialmean
}
#proportion of looks to left object across Gaze exposure trials
socmean <- soctotal / counted.trials
ss <- ss %>%
filter(!is.na(exptarget))
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
xtabs(~aoi + shortname + subid + target_object, .) %>%
as.data.frame() %>%
filter(aoi != "face")
##plyr - drop equals false
ss <- d %>%
filter(trial.type == "exposure" & aoi != "face") %>%
select(subid, condition) %>%
unique() %>%
left_join(ss, by = "subid")
##qplot(data=filter(ss, aoi != "face"), x=aoi, y = Freq, facets = subid ~ shortname,
##      geom = "bar", stat = "identity", fill = condition)
############ DETERMINE TARGET ON EXPOSURE ################
#create table for looks to target by trial name (exposure only)
exp.looks.to.target <- ss%>%
select(shortname, condition) %>%
unique()
#nogaze: proportion of looking to the left over both objects for each trial
ns <- ss %>%
filter(condition == "nogaze")
#mark naive participants in doc
#eventually - amont of time spent looking at kept object
#correct object is one kept
#slack help channel
subs <- unique(ns$subid)
trials <- unique(ns$shortname)
nstotal <- 0
counted.trials <- 0
for (trial in trials){
trialtotal <- 0
counted.subs <- 0
for (sub in subs){
temp <- subset(ns, shortname == trial & subid == sub)
left.to.total <- temp[[which(temp$target_object == "left" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "left" & temp$aoi == "right"), "Freq"]]
right.to.total <- temp[[which(temp$target_object == "right" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "right" & temp$aoi == "right"), "Freq"]]
if(left.to.total + right.to.total != 0){
if(left.to.total == 0){
correct_TO = "right"
incorrect_TO = "left"
} else{
correct_TO = "left"
incorrect_TO = "right"
}
temp <- subset(temp, target_object == correct_TO)
corr <- temp[[which(temp$aoi == correct_TO), "Freq"]]
incorr <- temp[[which(temp$aoi == incorrect_TO), "Freq"]]
target <- corr / (corr+incorr)
ss$exptarget[ss$subid == sub & ss$shortname == trial &
ss$target_object == correct_TO] <- target
nstotal <- nstotal + target
counted.trials = counted.trials + 1
counted.subs = counted.subs + 1
trialtotal <- trialtotal + target
}
}
trialmean <- trialtotal / counted.subs
exp.looks.to.target$targetprop[exp.looks.to.target$shortname == trial &
exp.looks.to.target$condition == "nogaze"] <-trialmean
}
#proportion of looks to left object across No Gaze exposure trials
nsmean <- nstotal / counted.trials #currently .499
#gaze: proportion of looking to object of gaze for each trial
soc <- ss %>%
filter(condition == "gaze")
subs <- unique(soc$subid)
trials <- unique(soc$shortname)
soctotal <- 0
counted.trials <- 0
for (trial in trials){
trialtotal <- 0
counted.subs <- 0
for (sub in subs){
temp <- subset(soc, shortname == trial & subid == sub)
left.to.total <- temp[[which(temp$target_object == "left" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "left" & temp$aoi == "right"), "Freq"]]
right.to.total <- temp[[which(temp$target_object == "right" &
temp$aoi == "left"), "Freq"]] +
temp[[which(temp$target_object == "right" & temp$aoi == "right"), "Freq"]]
if(left.to.total + right.to.total != 0){
if(left.to.total == 0){
correct_TO = "right"
incorrect_TO = "left"
} else{
correct_TO = "left"
incorrect_TO = "right"
}
temp <- subset(temp, target_object == correct_TO)
corr <- temp[[which(temp$aoi == correct_TO), "Freq"]]
incorr <- temp[[which(temp$aoi == incorrect_TO), "Freq"]]
target <- corr / (corr+incorr)
ss$exptarget[ss$subid == sub & ss$shortname == trial &
ss$target_object == correct_TO] <- target
soctotal <- soctotal + target
counted.trials = counted.trials + 1
counted.subs = counted.subs + 1
trialtotal <- trialtotal + target
}
}
trialmean <- trialtotal / counted.subs
exp.looks.to.target$targetprop[exp.looks.to.target$shortname == trial &
exp.looks.to.target$condition == "gaze"] <-trialmean
}
#proportion of looks to left object across Gaze exposure trials
socmean <- soctotal / counted.trials
ss <- ss %>%
filter(!is.na(exptarget))
qplot(targetprop,
facets = .~ condition,
data = exp.looks.to.target)
qplot(targetprop, fill = shortname,
facets = .~ condition,
data = exp.looks.to.target)
